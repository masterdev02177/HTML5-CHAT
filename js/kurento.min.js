var Kurento=function(m){this.callBackReady=m;this.myStreamName="";var j;var c={};var h="";this.playStream=function(n,o){e(n,o)};this.stopStream=function(n){i(n)};this.publishStream=function(o,n){d(o,n)};window.onload=function(){j=io("https://webtv.fr:8080",{secure:true});j.on("connected",function(){console.log("Connected to socket.io")});j.on("stream:publish:response",f);j.on("stream:play:response",b);j.on("stream:stop",function(n){k(n.streamName)});j.on("stream:iceCandidate",function(n){c[n.streamName+"_"+n.type].addIceCandidate(n.candidate)});j.on("stream:streamName",function(n){console.log("my stream name is: ",n.name);serverWebrtc.myStreamName=n.name;if(typeof serverWebrtc.callBackReady=="function"){serverWebrtc.callBackReady()}})};window.onbeforeunload=function(){};function f(o){if(o.response!="accepted"){var n=o.message?o.message:"Unknown error";console.warn("Call not accepted for the following reason: "+n);k(o.streamName)}else{c[o.streamName+"_publisher"].processAnswer(o.sdpAnswer)}}function b(o){if(o.response!="accepted"){var n=o.message?o.message:"Unknow error";console.warn("Call not accepted for the following reason: "+n);k(o.streamName)}else{c[o.streamName+"_viewer"].processAnswer(o.sdpAnswer)}}function d(p,n){n=n||false;if(!c[serverWebrtc.myStreamName+"_publisher"]){var o={localVideo:p,mediaConstraints:{audio:true,video:{width:320,framerate:12}},onicecandidate:function(q){a(q,"publisher")}};c[serverWebrtc.myStreamName+"_publisher"]=kurentoUtils.WebRtcPeer.WebRtcPeerSendonly(o,function(q){if(q){return onError(q)}this.generateOffer(function(s,r){g(s,r,n)})})}}function g(p,n,o){if(p){return onError(p)}l("stream:publish",{sdpOffer:n,record:o})}function e(n,p){if(!c[n+"_viewer"]){var o={remoteVideo:p,onicecandidate:function(q){a(q,"viewer")}};c[n+"_viewer"]=kurentoUtils.WebRtcPeer.WebRtcPeerRecvonly(o,function(q){if(q){return onError(q)}this.generateOffer(function(s,r){if(s){return onError(s)}l("stream:play",{publisherName:n,sdpOffer:r})})})}}function a(o,n){console.log("Local candidate"+JSON.stringify(o));l("onIceCandidate",{candidate:o,type:n})}function i(n){var o=n.split("_");if(o.length<2){console.warn("Not a correct stream name. Need to have type after _");return}if(c[n]){if(o[1]=="publisher"){l("stream:stop",{})}k(n)}}function k(n){if(c[n]){c[n].dispose();delete c[n]}}function l(n,o){console.log("Senging event: "+n,o);j.emit(n,o)}};